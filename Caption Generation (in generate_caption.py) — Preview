from keras.models import load_model
from keras.preprocessing.sequence import pad_sequences
from pickle import load
import numpy as np
from utils import extract_features

def generate_caption(model, tokenizer, photo, max_length):
    in_text = 'startseq'
    for _ in range(max_length):
        sequence = tokenizer.texts_to_sequences([in_text])[0]
        sequence = pad_sequences([sequence], maxlen=max_length)
        yhat = model.predict([photo, sequence], verbose=0)
        yhat = np.argmax(yhat)
        word = next((k for k, v in tokenizer.word_index.items() if v == yhat), None)
        if word is None or word == 'endseq':
            break
        in_text += ' ' + word
    return in_text.replace('startseq', '').replace('endseq', '').strip()

if __name__ == "__main__":
    tokenizer = load(open("models/tokenizer.pkl", "rb"))
    model = load_model("models/image_caption_model.h5")
    features = extract_features("test_image.jpg")
    for key in features:
        caption = generate_caption(model, tokenizer, features[key], 34)  # 34 = max length
        print(f"Generated Caption: {caption}")
